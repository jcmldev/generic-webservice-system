
package dd.desWrapper;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "DiscoveryElementService", targetNamespace = "http://ws.dd/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface DiscoveryElementService {


    /**
     * 
     * @param fromTimestamp
     * @param frontendUrls
     * @param conversationId
     * @param toTimestamp
     * @param clientId
     */
    @WebMethod
    @RequestWrapper(localName = "runDiscoveryStartingWithFrontends", targetNamespace = "http://ws.dd/", className = "dd.desWrapper.RunDiscoveryStartingWithFrontends")
    @ResponseWrapper(localName = "runDiscoveryStartingWithFrontendsResponse", targetNamespace = "http://ws.dd/", className = "dd.desWrapper.RunDiscoveryStartingWithFrontendsResponse")
    @Action(input = "http://ws.dd/DiscoveryElementService/runDiscoveryStartingWithFrontendsRequest", output = "http://ws.dd/DiscoveryElementService/runDiscoveryStartingWithFrontendsResponse")
    public void runDiscoveryStartingWithFrontends(
        @WebParam(name = "conversationId", targetNamespace = "")
        int conversationId,
        @WebParam(name = "clientId", targetNamespace = "")
        String clientId,
        @WebParam(name = "frontendUrls", targetNamespace = "")
        List<String> frontendUrls,
        @WebParam(name = "fromTimestamp", targetNamespace = "")
        long fromTimestamp,
        @WebParam(name = "toTimestamp", targetNamespace = "")
        long toTimestamp);

}
